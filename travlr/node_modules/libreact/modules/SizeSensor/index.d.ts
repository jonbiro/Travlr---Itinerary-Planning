import * as React from 'react';
export interface ISizeSensorProps extends React.HTMLProps<any> {
    children?: ((size: ISizeSensorState) => React.ReactElement<any>) | React.ReactElement<any>;
    render?: (size: ISizeSensorState) => React.ReactElement<any>;
    onSize?: (size: ISizeSensorState) => void;
}
export interface ISizeSensorState {
    width: number;
    height: number;
}
export declare class SizeSensor extends React.Component<ISizeSensorProps, ISizeSensorState> {
    state: ISizeSensorState;
    iframe: any;
    timeout: any;
    props: ISizeSensorProps;
    window: Window;
    componentDidMount(): void;
    onWindow(wnd: Window): void;
    componentWillUnmount(): void;
    ref: (iframe: any) => void;
    onObjectResize: () => void;
    setSize(): void;
    render(): React.DetailedReactHTMLElement<{
        style: any;
    }, HTMLElement>;
}
export declare const withSize: any;
