import * as React from 'react';
import { on, off, noop } from '../util';
export class OutsideClick extends React.Component {
    constructor() {
        super(...arguments);
        this.ref = (originalRef) => (el) => {
            const { clickRoots } = this.props;
            this.roots = clickRoots
                ? clickRoots()
                : [el];
            (originalRef || noop)(el);
        };
        this.onClickOutside = (event) => {
            if (!this.roots.length) {
                return;
            }
            const inside = this.roots.some(root => (root.contains(event.target)));
            if (!inside) {
                (this.props.onClick || noop)(event);
            }
        };
    }
    componentDidMount() {
        on(document, this.props.event, this.onClickOutside);
    }
    componentWillUnmount() {
        off(document, this.props.event, this.onClickOutside);
    }
    render() {
        const { children } = this.props;
        const element = React.Children.only(children);
        if (!element) {
            return null;
        }
        return React.cloneElement(element, {
            ...element.props,
            ref: this.ref(element.ref)
        });
    }
}
OutsideClick.defaultProps = {
    event: 'mousedown'
};
