import { Component } from 'react';
const RIC = window.requestIdleCallback || ((fn, { timeout = 35 } = {}) => setTimeout(fn, timeout));
export class WhenIdle extends Component {
    constructor() {
        super(...arguments);
        this.mounted = false;
        this.state = {
            ready: false
        };
    }
    componentDidMount() {
        this.mounted = true;
        const { timeout } = this.props;
        RIC(() => {
            if (this.mounted) {
                this.setState({ ready: true });
            }
        }, { timeout });
    }
    componentWillUnmount() {
        this.mounted = false;
    }
    render() {
        return this.state.ready ? this.props.children : null;
    }
}
