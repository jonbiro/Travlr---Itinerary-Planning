/// <reference types="react" />
import { IMockParams, IMockComponent } from './mock';
export declare type TLoaderPromise = () => Promise<React.ComponentClass<any> | React.StatelessComponent<any>>;
export declare type TLoader = TLoaderPromise;
export interface ILoadableParams<TProps> extends IMockParams<TProps> {
    error?: (error: any) => (React.Component<TProps, any> | React.SFC<TProps>);
    loader: TLoader;
}
export interface ILoadableComponent<TProps> extends IMockComponent<TProps> {
    load(): any;
}
export declare type TLoadable = <TProps>(params: ILoadableParams<TProps>) => ILoadableComponent<TProps>;
export declare const loadable: TLoadable;
