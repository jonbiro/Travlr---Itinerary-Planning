import { Component } from 'react';
import { SyncSensor } from '../SyncSensor';
export interface IMotionSensorProps {
    children?: (state: IMotionSensorState) => React.ReactElement<any>;
}
export interface IMotionSensorState {
    acceleration: {
        x: number;
        y: number;
        z: number;
    };
    accelerationIncludingGravity: {
        x: number;
        y: number;
        z: number;
    };
    rotationRate: {
        alpha: number;
        beta: number;
        gamma: number;
    };
    interval: number;
}
export declare class MotionSensor extends Component<IMotionSensorProps, any> {
    initial: {
        acceleration: {
            x: any;
            y: any;
            z: any;
        };
        accelerationIncludingGravity: {
            x: any;
            y: any;
            z: any;
        };
        rotationRate: {
            alpha: any;
            beta: any;
            gamma: any;
        };
        interval: number;
    };
    render(): import("react").ComponentElement<any, SyncSensor<{}>>;
}
export declare const withMotion: any;
