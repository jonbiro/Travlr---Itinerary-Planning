import * as React from 'react';
import { ViewportScrollSensor } from '../ViewportScrollSensor';
const h = React.createElement;
const defaultSentinel = h('div', { style: { width: 1, height: 1 } });
export class InfiniteScroll extends React.Component {
    constructor() {
        super(...arguments);
        this.lastLoadMoreCursor = null;
        this.onViewportChange = ({ visible }) => {
            if (visible) {
                if (this.lastLoadMoreCursor !== this.props.cursor) {
                    this.lastLoadMoreCursor = this.props.cursor;
                    this.props.loadMore();
                }
            }
        };
    }
    render() {
        const { props } = this;
        const { children, hasMore, sentinel, margin, poll } = props;
        return h(React.Fragment, null, children, hasMore &&
            h(ViewportScrollSensor, { margin: [0, 0, margin, 0], poll, onChange: this.onViewportChange }, sentinel));
    }
}
InfiniteScroll.defaultProps = {
    sentinel: defaultSentinel,
    hasMore: true,
    margin: 100,
};
