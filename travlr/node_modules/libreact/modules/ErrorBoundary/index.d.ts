import { Component } from 'react';
export interface IErrorBoundaryProps {
    children: any;
    renderError?: (state: IErrorBoundaryState) => React.ReactElement<any>;
    onError?: (error?: Error, info?: any) => void;
}
export interface IErrorBoundaryState {
    error?: Error;
    info?: any;
}
export declare class ErrorBoundary extends Component<any, any> {
    state: IErrorBoundaryState;
    componentDidCatch(error: any, info: any): void;
    render(): any;
}
export declare const withErrorBoundary: (Comp: any, boundaryProps: any) => (props: any) => import("react").ComponentElement<any, ErrorBoundary>;
