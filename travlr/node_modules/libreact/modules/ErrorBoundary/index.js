import { Component } from 'react';
import { h, noop } from '../util';
export class ErrorBoundary extends Component {
    constructor() {
        super(...arguments);
        this.state = {};
    }
    componentDidCatch(error, info) {
        this.setState({
            error,
            info
        });
        (this.props.onError || noop)(error, info);
    }
    render() {
        const { props, state } = this;
        const { renderError, children } = props;
        return state.error ?
            (typeof renderError === 'function' ? renderError(state) : null) :
            children;
    }
}
export const withErrorBoundary = (Comp, boundaryProps) => (props) => {
    return h(ErrorBoundary, boundaryProps, h(Comp, props));
};
