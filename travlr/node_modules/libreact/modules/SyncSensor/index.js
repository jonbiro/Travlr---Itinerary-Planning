import * as React from 'react';
import { noop } from '../util';
import renderProp from '../util/renderProp';
import { throttle } from 'throttle-debounce';
export class SyncSensor extends React.Component {
    constructor(props, context) {
        super(props, context);
        this.state = props.initial || {};
        this.onEvent = throttle(this.props.throttle, false, (event) => {
            const state = this.props.onEvent(event);
            this.setState(state, () => {
                (this.props.onChange || noop)(this.state);
            });
        });
    }
    componentDidMount() {
        this.props.addListener(this.onEvent);
    }
    componentWillUnmount() {
        this.props.removeListener(this.onEvent);
    }
    render() {
        return renderProp(this.props, this.state);
    }
}
SyncSensor.defaultProps = {
    throttle: 100
};
