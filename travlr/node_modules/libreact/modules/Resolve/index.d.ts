import * as React from 'react';
export interface IResolveProps {
    promise: Promise<any>;
    children?: (state: IResolveState) => React.ReactElement<any>;
}
export interface IResolveState {
    pending: boolean;
    value?: any;
    error?: any;
}
export declare class Resolve extends React.Component<IResolveProps, any> {
    mounted: boolean;
    state: IResolveState;
    constructor(props: any, context: any);
    componentDidMount(): void;
    componentDidUpdate({ promise }: {
        promise: any;
    }): void;
    componentWillUnmount(): void;
    resolve(): void;
    render(): React.ReactElement<any>;
}
