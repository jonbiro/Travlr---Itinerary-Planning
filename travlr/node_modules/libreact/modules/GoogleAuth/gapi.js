let gapiCache;
export const getGapi = async () => {
    if (gapiCache) {
        return gapiCache;
    }
    await new Promise(resolve => {
        const gapicallback = `__gapicb${Date.now().toString(36)}`;
        window[gapicallback] = () => {
            delete window[gapicallback];
            gapiCache = window.gapi;
            resolve();
        };
        const script = document.createElement('script');
        script.src = 'https://apis.google.com/js/platform.js?onload=' + gapicallback;
        document.head.appendChild(script);
    });
    return gapiCache;
};
let gapiAuth2Cache;
export const getGapiAuth2 = async () => {
    if (gapiAuth2Cache) {
        return gapiAuth2Cache;
    }
    const gapi = await getGapi();
    await new Promise(resolve => {
        gapi.load('auth2', () => {
            gapiAuth2Cache = gapi.auth2;
            resolve();
        });
    });
    return gapiAuth2Cache;
};
export const getGapiAuthInstance = async (options) => {
    const gapiAuth2 = await getGapiAuth2();
    return await gapiAuth2.init(options);
};
