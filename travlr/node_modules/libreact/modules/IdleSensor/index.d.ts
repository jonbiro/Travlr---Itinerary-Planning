import { Component } from 'react';
export interface IIdleSensorProps {
    events?: string[];
    ms?: number;
    onChange?: (idle: boolean) => void;
    throttle?: number;
}
export interface IIdleSensorState {
    idle: boolean;
}
export declare class IdleSensor extends Component<IIdleSensorProps, IIdleSensorState> {
    static defaultProps: {
        events: string[];
        ms: number;
        throttle: number;
    };
    state: {
        idle: boolean;
    };
    timeout: any;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(props: any): void;
    bindEvents(): void;
    unbindEvents(): void;
    onVisibility: () => void;
    onEvent: any;
    change(idle: boolean): void;
    onTimeout: () => void;
    setTimeout(): void;
    render(): any;
}
export declare const withIdle: any;
