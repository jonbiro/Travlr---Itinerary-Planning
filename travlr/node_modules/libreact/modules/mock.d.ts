import { Component } from 'react';
export interface IMock<TProps> extends Component<TProps, any> {
}
export interface IMockComponent<TProps> {
    new (props: TProps, context: any): IMock<TProps>;
    implement(Implementation: React.Component<TProps, any> | React.SFC<TProps>): any;
}
export interface IMockParams<TProps> {
    loading?: ((props: any) => (React.ReactElement<any> | React.SFC<TProps>)) | React.ReactElement<any> | React.SFC<TProps> | React.ReactChild;
}
export declare type TMock = <TProps>(params?: IMockParams<TProps>) => IMockComponent<TProps>;
export declare const mock: TMock;
