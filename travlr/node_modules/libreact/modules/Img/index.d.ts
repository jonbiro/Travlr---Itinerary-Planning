import { Component } from 'react';
declare const enum STATE {
    LOADING = 0,
    DONE = 1,
    ERROR = 2
}
export interface IImgProps extends React.AllHTMLAttributes<any> {
    renderLoad?: (img: any, props?: IImgProps, state?: STATE) => React.ReactElement<any>;
    renderError?: (img?: any, props?: IImgProps, state?: STATE) => React.ReactElement<any>;
    $ref?: any;
}
export interface IImgState {
    state: STATE;
    error?: string;
}
export declare class Img extends Component<IImgProps, IImgState> {
    state: IImgState;
    onLoad: (originalOnLoad: any) => (event: any) => void;
    onError: (originalOnError: any) => (event: any) => void;
    render(): import("react").ReactElement<any>;
}
export {};
