"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.easing = {
    linear: function (t) { return t; },
    quadratic: function (t) { return t * (-(t * t) * t + 4 * t * t - 6 * t + 4); },
    cubic: function (t) { return t * (4 * t * t - 9 * t + 6); },
    elastic: function (t) { return t * (33 * t * t * t * t - 106 * t * t * t + 126 * t * t - 67 * t + 15); },
    inQuad: function (t) { return t * t; },
    outQuad: function (t) { return t * (2 - t); },
    inOutQuad: function (t) { return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t; },
    inCubic: function (t) { return t * t * t; },
    outCubic: function (t) { return (--t) * t * t + 1; },
    inOutCubic: function (t) { return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1; },
    inQuart: function (t) { return t * t * t * t; },
    outQuart: function (t) { return 1 - (--t) * t * t * t; },
    inOutQuart: function (t) { return t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t; },
    inQuint: function (t) { return t * t * t * t * t; },
    outQuint: function (t) { return 1 + (--t) * t * t * t * t; },
    inOutQuint: function (t) { return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t; },
    inSine: function (t) { return -Math.cos(t * (Math.PI / 2)) + 1; },
    outSine: function (t) { return Math.sin(t * (Math.PI / 2)); },
    inOutSine: function (t) { return -(Math.cos(Math.PI * t) - 1) / 2; },
    inExpo: function (t) { return Math.pow(2, 10 * (t - 1)); },
    outExpo: function (t) { return -Math.pow(2, -10 * t) + 1; },
    inOutExpo: function (t) {
        t /= .5;
        if (t < 1)
            return Math.pow(2, 10 * (t - 1)) / 2;
        t--;
        return (-Math.pow(2, -10 * t) + 2) / 2;
    },
    inCirc: function (t) { return -Math.sqrt(1 - t * t) + 1; },
    outCirc: function (t) { return Math.sqrt(1 - (t = t - 1) * t); },
    inOutCirc: function (t) {
        t /= .5;
        if (t < 1)
            return -(Math.sqrt(1 - t * t) - 1) / 2;
        t -= 2;
        return (Math.sqrt(1 - t * t) + 1) / 2;
    }
};
//# sourceMappingURL=easing.js.map