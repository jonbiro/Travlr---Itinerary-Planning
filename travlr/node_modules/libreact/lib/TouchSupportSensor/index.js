"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var renderProp_1 = tslib_1.__importDefault(require("../util/renderProp"));
var DocumentTouch;
exports.touchSupported = function () {
    var prefixes = " -webkit- -moz- -o- -ms- ".split(" ");
    var query = ["(", prefixes.join("touch-enabled),("), "heartz", ")"].join("");
    if ("ontouchstart" in window ||
        (window.DocumentTouch && document instanceof DocumentTouch)) {
        return true;
    }
    return window.matchMedia(query).matches;
};
var TouchSupportSensor = (function (_super) {
    tslib_1.__extends(TouchSupportSensor, _super);
    function TouchSupportSensor(props, context) {
        var _this = _super.call(this, props, context) || this;
        if (props.onlyMouse && props.onlyTouch) {
            console.warn("You're using both `onlyMouse` and `onlyTouch` on the TouchSupportSensor component. This is unsupported and may lead to unexpected results.");
        }
        _this.state = { touchSupported: exports.touchSupported() };
        return _this;
    }
    TouchSupportSensor.prototype.render = function () {
        if (this.props.onlyMouse && this.state.touchSupported) {
            return null;
        }
        if (this.props.onlyTouch && !this.state.touchSupported) {
            return null;
        }
        return renderProp_1.default(this.props, this.state);
    };
    return TouchSupportSensor;
}(React.Component));
exports.TouchSupportSensor = TouchSupportSensor;
//# sourceMappingURL=index.js.map