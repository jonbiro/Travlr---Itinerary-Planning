import * as React from 'react';
import { IUniversalInterfaceProps } from '../typing';
import { TRect } from '../ViewportScrollSensor';
export interface IParallaxProps extends IUniversalInterfaceProps<IParallaxState> {
    distance?: number;
    throttle?: number;
    margin?: [number, number, number, number];
    onChange?: (IParallaxState: any) => void;
}
export interface IParallaxState {
    distance: number;
    travelled: number;
    value: number;
    el: TRect;
    root: TRect;
}
export declare class Parallax extends React.Component<IParallaxProps, IParallaxState> {
    static defaultProps: {
        distance: number;
        margin: [number, number, number, number];
        throttle: number;
    };
    el: HTMLElement;
    mounted: boolean;
    state: IParallaxState;
    constructor(props: any, context: any);
    ref: (originalRef: any) => (el: any) => void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    change(newState: any): void;
    onScroll: any;
    render(): React.SFCElement<{
        ref: (el: any) => void;
    }>;
}
