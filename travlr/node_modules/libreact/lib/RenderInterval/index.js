"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var react_universal_interface_1 = require("react-universal-interface");
var RenderInterval = (function (_super) {
    tslib_1.__extends(RenderInterval, _super);
    function RenderInterval() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.interval = 50;
        _this.timeout = null;
        _this.timeoutDelay = null;
        _this.state = {
            start: 0,
            now: 0,
            value: 0
        };
        _this.start = function () {
            var now = Date.now();
            _this.interval = 1000 / _this.props.fps;
            _this.setState({
                start: now,
                now: now,
                value: 0
            }, function () {
                _this.timeout = setTimeout(_this.onFrame, _this.interval);
            });
        };
        _this.onFrame = function () {
            var now = Date.now();
            var value = Math.min((now - _this.state.start) / _this.props.ms, 1);
            var onState;
            if (value < 1) {
                onState = function () {
                    _this.timeout = setTimeout(_this.onFrame, _this.interval);
                };
            }
            _this.setState({
                now: now,
                value: value
            }, onState);
        };
        return _this;
    }
    RenderInterval.prototype.componentDidMount = function () {
        var delay = this.props.delay;
        if (delay) {
            this.timeoutDelay = setTimeout(this.start, delay);
        }
        else {
            this.start();
        }
    };
    RenderInterval.prototype.componentDidUpdate = function (props) {
        if (props.fps !== this.props.fps) {
            this.interval = 1000 / this.props.fps;
        }
    };
    RenderInterval.prototype.componentWillUnmount = function () {
        clearTimeout(this.timeout);
        clearTimeout(this.timeoutDelay);
    };
    RenderInterval.prototype.render = function () {
        return react_universal_interface_1.render(this.props, this.state);
    };
    RenderInterval.defaultProps = {
        fps: 30,
        ms: 300
    };
    return RenderInterval;
}(react_1.Component));
exports.RenderInterval = RenderInterval;
exports.withRenderInterval = react_universal_interface_1.createEnhancer(RenderInterval, 'renderInterval');
//# sourceMappingURL=index.js.map