"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var SyncSensor_1 = require("../SyncSensor");
var util_1 = require("../util");
var faccToHoc_1 = tslib_1.__importDefault(require("../util/faccToHoc"));
var addListener = function (handler) { return window.addEventListener('scroll', handler, {
    capture: false,
    passive: true
}); };
var removeListener = function (handler) { return window.removeEventListener('scroll', handler); };
var onEvent = function () { return ({
    x: window.scrollX,
    y: window.scrollY
}); };
var getInitialState = function () {
    if (util_1.isClient) {
        return onEvent();
    }
    else {
        return {
            x: 0,
            y: 0
        };
    }
};
var WindowScrollSensor = (function (_super) {
    tslib_1.__extends(WindowScrollSensor, _super);
    function WindowScrollSensor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.initial = getInitialState();
        return _this;
    }
    WindowScrollSensor.prototype.render = function () {
        return util_1.h(SyncSensor_1.SyncSensor, {
            children: this.props.children,
            initial: this.initial,
            addListener: addListener,
            removeListener: removeListener,
            onChange: this.props.onChange,
            onEvent: onEvent
        });
    };
    return WindowScrollSensor;
}(React.Component));
exports.WindowScrollSensor = WindowScrollSensor;
exports.withWindowScroll = faccToHoc_1.default(WindowScrollSensor, 'windowScroll');
//# sourceMappingURL=index.js.map