"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var SyncSensor_1 = require("../SyncSensor");
var util_1 = require("../util");
var faccToHoc_1 = tslib_1.__importDefault(require("../util/faccToHoc"));
var DEFAULT = {
    angle: 0,
    type: 'landscape-primary'
};
var addListener = function (handler) { return util_1.on(window, 'orientationchange', handler); };
var removeListener = function (handler) { return util_1.off(window, 'orientationchange', handler); };
var onEvent = function () {
    var orientation = screen.orientation;
    if (!orientation) {
        return DEFAULT;
    }
    var angle = orientation.angle, type = orientation.type;
    return {
        angle: angle,
        type: type
    };
};
var getInitialState = function () {
    return util_1.isClient ? onEvent() : DEFAULT;
};
var OrientationSensor = (function (_super) {
    tslib_1.__extends(OrientationSensor, _super);
    function OrientationSensor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.initial = getInitialState();
        return _this;
    }
    OrientationSensor.prototype.render = function () {
        return util_1.h(SyncSensor_1.SyncSensor, {
            children: this.props.children,
            initial: this.initial,
            addListener: addListener,
            removeListener: removeListener,
            onEvent: onEvent
        });
    };
    return OrientationSensor;
}(react_1.Component));
exports.OrientationSensor = OrientationSensor;
exports.withOrientation = faccToHoc_1.default(OrientationSensor, 'orientation');
//# sourceMappingURL=index.js.map