import * as React from 'react';
export declare type TValue = {
    [key: string]: any;
};
export interface IProviderProps {
    value: any;
    children?: any;
    name?: string;
}
export interface IProviderState {
}
export declare class Provider extends React.Component<IProviderProps, IProviderState> {
    static defaultProps: {
        name: string;
    };
    render(): React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
}
export interface IConsumerProps {
    children?: (value: any) => React.ReactElement<any>;
    name: string;
}
export interface IConsumerState {
    value: any;
}
export declare class Consumer extends React.Component<IConsumerProps, IConsumerState> {
    render(): React.ComponentElement<{}, React.Component<{}, any, any>>;
}
export declare const withContext: any;
