"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var faccToHoc_1 = tslib_1.__importDefault(require("../util/faccToHoc"));
var contexts = {};
var getOrCreateContext = function (name) {
    var context = contexts[name];
    if (!context) {
        context = contexts[name] = React.createContext({});
    }
    return context;
};
var Provider = (function (_super) {
    tslib_1.__extends(Provider, _super);
    function Provider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Provider.prototype.render = function () {
        var _a = this.props, name = _a.name, value = _a.value, children = _a.children;
        var Provider = getOrCreateContext(name).Provider;
        return React.createElement(Provider, { value: value }, children || null);
    };
    Provider.defaultProps = {
        name: 'default',
    };
    return Provider;
}(React.Component));
exports.Provider = Provider;
var Consumer = (function (_super) {
    tslib_1.__extends(Consumer, _super);
    function Consumer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Consumer.prototype.render = function () {
        var _a = this.props, name = _a.name, children = _a.children;
        if (process.env.NODE_ENV !== 'production') {
            if (!name || (typeof name !== 'string')) {
                throw new TypeError('context/Consumer name prop should be a string');
            }
        }
        var context = contexts[name];
        if (!context) {
            if (process.env.NODE_ENV !== 'production') {
                throw new Error("Context \"" + name + "\" does not have a provider.");
            }
            return null;
        }
        return React.createElement(context.Consumer, {}, children);
    };
    return Consumer;
}(React.Component));
exports.Consumer = Consumer;
exports.withContext = faccToHoc_1.default(Consumer, '');
//# sourceMappingURL=index.js.map