"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var util_1 = require("../util");
var renderProp_1 = tslib_1.__importDefault(require("../util/renderProp"));
var faccToHoc_1 = tslib_1.__importDefault(require("../util/faccToHoc"));
var HoverSensor = (function (_super) {
    tslib_1.__extends(HoverSensor, _super);
    function HoverSensor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isHover: false
        };
        _this.onMouseEnter = function (originalOnMouseEnter) { return function (event) {
            (originalOnMouseEnter || util_1.noop)(event);
            _this.setState({
                isHover: true
            });
        }; };
        _this.onMouseLeave = function (originalOnMouseLeave) { return function (event) {
            (originalOnMouseLeave || util_1.noop)(event);
            _this.setState({
                isHover: false
            });
        }; };
        return _this;
    }
    HoverSensor.prototype.render = function () {
        var state = tslib_1.__assign({}, this.state);
        var bond = this.props.bond;
        if (bond) {
            if (typeof bond === 'boolean') {
                bond = 'bond';
            }
            state[bond] = {
                onMouseEnter: this.onMouseEnter(),
                onMouseLeave: this.onMouseLeave()
            };
            return renderProp_1.default(this.props, state);
        }
        else {
            var element = renderProp_1.default(this.props, state);
            return react_1.cloneElement(element, {
                onMouseEnter: this.onMouseEnter(element.props.onMouseEnter),
                onMouseLeave: this.onMouseLeave(element.props.onMouseLeave)
            });
        }
    };
    return HoverSensor;
}(react_1.Component));
exports.HoverSensor = HoverSensor;
var HoverSensorWithBond = function (props) { return util_1.h(HoverSensor, tslib_1.__assign({ bond: true }, props)); };
exports.withHover = faccToHoc_1.default(HoverSensorWithBond, 'hover');
//# sourceMappingURL=index.js.map