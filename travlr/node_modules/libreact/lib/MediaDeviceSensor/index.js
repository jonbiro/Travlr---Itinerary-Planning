"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var util_1 = require("../util");
var faccToHoc_1 = tslib_1.__importDefault(require("../util/faccToHoc"));
var renderProp_1 = tslib_1.__importDefault(require("../util/renderProp"));
var MediaDeviceSensor = (function (_super) {
    tslib_1.__extends(MediaDeviceSensor, _super);
    function MediaDeviceSensor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            devices: []
        };
        _this.mounted = false;
        _this.onChange = function () {
            navigator.mediaDevices.enumerateDevices()
                .then(function (devices) {
                if (_this.mounted) {
                    _this.setState({
                        devices: devices.map(function (_a) {
                            var deviceId = _a.deviceId, groupId = _a.groupId, kind = _a.kind, label = _a.label;
                            return ({ deviceId: deviceId, groupId: groupId, kind: kind, label: label });
                        })
                    });
                }
            })
                .catch(util_1.noop);
        };
        return _this;
    }
    MediaDeviceSensor.prototype.componentDidMount = function () {
        this.mounted = true;
        this.onChange();
        util_1.on(navigator.mediaDevices, 'devicechange', this.onChange);
    };
    MediaDeviceSensor.prototype.componentWillUnmount = function () {
        this.mounted = false;
        util_1.off(navigator.mediaDevices, 'devicechange', this.onChange);
    };
    MediaDeviceSensor.prototype.render = function () {
        return renderProp_1.default(this.props, this.state);
    };
    return MediaDeviceSensor;
}(react_1.Component));
exports.MediaDeviceSensor = MediaDeviceSensor;
exports.withMediaDevices = faccToHoc_1.default(MediaDeviceSensor);
//# sourceMappingURL=index.js.map