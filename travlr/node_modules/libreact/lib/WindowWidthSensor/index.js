"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var util_1 = require("../util");
var faccToHoc_1 = tslib_1.__importDefault(require("../util/faccToHoc"));
var renderProp_1 = tslib_1.__importDefault(require("../util/renderProp"));
var util_2 = require("../util");
var throttle_debounce_1 = require("throttle-debounce");
var WindowWidthSensor = (function (_super) {
    tslib_1.__extends(WindowWidthSensor, _super);
    function WindowWidthSensor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            width: util_1.isClient ? window.innerWidth : _this.props.width,
        };
        _this.onResize = throttle_debounce_1.throttle(_this.props.throttle, false, function () {
            var width = window.innerWidth;
            if (width !== _this.state.width) {
                var state = { width: width };
                _this.setState(state);
                _this.props.onWidth(state);
            }
        });
        return _this;
    }
    WindowWidthSensor.prototype.componentDidMount = function () {
        util_2.on(window, 'resize', this.onResize);
    };
    WindowWidthSensor.prototype.componentWillUnmount = function () {
        util_2.off(window, 'resize', this.onResize);
    };
    WindowWidthSensor.prototype.render = function () {
        return renderProp_1.default(this.props, this.state);
    };
    WindowWidthSensor.defaultProps = {
        width: 1920,
        throttle: 25,
        onWidth: util_2.noop,
    };
    return WindowWidthSensor;
}(react_1.Component));
exports.WindowWidthSensor = WindowWidthSensor;
exports.withWindowWidth = faccToHoc_1.default(WindowWidthSensor, 'windowWidth');
//# sourceMappingURL=index.js.map