"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var react_universal_interface_1 = require("react-universal-interface");
var equalSets = function (a, b) {
    if (a.length !== b.length) {
        return false;
    }
    var A = a.slice().sort();
    var B = b.slice().sort();
    for (var i = 0; i < A.length; i++) {
        if (A[i] !== B[i]) {
            return false;
        }
    }
    return true;
};
var ClassNames = (function (_super) {
    tslib_1.__extends(ClassNames, _super);
    function ClassNames() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ClassNames.prototype.componentDidMount = function () {
        this.putList(this.props.list);
    };
    ClassNames.prototype.shouldComponentUpdate = function (props) {
        return !equalSets(props.list, this.props.list);
    };
    ClassNames.prototype.componentDidUpdate = function (props) {
        if (!props.persist) {
            this.removeList(props.list, props.el);
        }
        this.putList(this.props.list);
    };
    ClassNames.prototype.componentWillUnmount = function () {
        if (!this.props.persist) {
            this.removeList(this.props.list);
        }
    };
    ClassNames.prototype.putList = function (list, el) {
        if (el === void 0) { el = this.props.el || document.body; }
        for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {
            var className = list_1[_i];
            el.classList.add(className);
        }
    };
    ClassNames.prototype.removeList = function (list, el) {
        if (el === void 0) { el = this.props.el || document.body; }
        for (var _i = 0, list_2 = list; _i < list_2.length; _i++) {
            var className = list_2[_i];
            el.classList.remove(className);
        }
    };
    ClassNames.prototype.render = function () {
        return react_universal_interface_1.render(this.props, null);
    };
    return ClassNames;
}(react_1.Component));
exports.ClassNames = ClassNames;
//# sourceMappingURL=index.js.map