"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var renderProp_1 = tslib_1.__importDefault(require("../util/renderProp"));
var ScrollSensor = (function (_super) {
    tslib_1.__extends(ScrollSensor, _super);
    function ScrollSensor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            x: 0,
            y: 0
        };
        _this.onScroll = function () {
            var el = _this.props.el;
            if (el) {
                cancelAnimationFrame(_this.frame);
                _this.frame = requestAnimationFrame(function () {
                    _this.setState({
                        x: el.scrollLeft,
                        y: el.scrollTop
                    });
                });
            }
        };
        return _this;
    }
    ScrollSensor.prototype.componentDidMount = function () {
        this.onScroll();
        this.addListener();
    };
    ScrollSensor.prototype.componentDidUpdate = function (props) {
        if (props.el !== this.props.el) {
            this.removeListener(props.el);
            this.addListener();
        }
    };
    ScrollSensor.prototype.componentWillUnmount = function () {
        this.removeListener();
    };
    ScrollSensor.prototype.addListener = function () {
        var el = this.props.el;
        if (el) {
            el.addEventListener('scroll', this.onScroll, {
                capture: false,
                passive: true
            });
        }
    };
    ScrollSensor.prototype.removeListener = function (el) {
        if (el === void 0) { el = this.props.el; }
        if (el) {
            el.removeEventListener('scroll', this.onScroll);
        }
    };
    ScrollSensor.prototype.render = function () {
        return renderProp_1.default(this.props, this.state);
    };
    return ScrollSensor;
}(react_1.Component));
exports.ScrollSensor = ScrollSensor;
//# sourceMappingURL=index.js.map