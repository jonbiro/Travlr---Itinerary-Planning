var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* global google */
import { PureComponent } from 'react';
import { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper';
import MapContext from '../../map-context';
var eventMap = {
    onCloseClick: 'closeclick',
    onPanoChanged: 'pano_changed',
    onPositionChanged: 'position_changed',
    onPovChanged: 'pov_changed',
    onResize: 'resize',
    onStatusChanged: 'status_changed',
    onVisibleChanged: 'visible_changed',
    onZoomChanged: 'zoom_changed'
};
var updaterMap = {
    register: function (instance, provider, options) {
        // @ts-ignore
        instance.registerPanoProvider(provider, options);
    },
    links: function (instance, links) {
        instance.setLinks(links);
    },
    motionTracking: function (instance, motionTracking) {
        instance.setMotionTracking(motionTracking);
    },
    options: function (instance, options) {
        instance.setOptions(options);
    },
    pano: function (instance, pano) {
        instance.setPano(pano);
    },
    position: function (instance, position) {
        instance.setPosition(position);
    },
    pov: function (instance, pov) {
        instance.setPov(pov);
    },
    visible: function (instance, visible) {
        instance.setVisible(visible);
    },
    zoom: function (instance, zoom) {
        instance.setZoom(zoom);
    }
};
var StreetViewPanorama = /** @class */ (function (_super) {
    __extends(StreetViewPanorama, _super);
    function StreetViewPanorama() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.registeredEvents = [];
        _this.state = {
            streetViewPanorama: null
        };
        _this.componentDidMount = function () {
            var streetViewPanorama = _this.context.getStreetView();
            _this.setState(function () { return ({
                streetViewPanorama: streetViewPanorama
            }); }, function () { });
        };
        _this.componentDidUpdate = function (prevProps) {
            unregisterEvents(_this.registeredEvents);
            _this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({
                updaterMap: updaterMap,
                eventMap: eventMap,
                prevProps: prevProps,
                nextProps: _this.props,
                instance: _this.state.streetViewPanorama
            });
        };
        _this.componentWillUnmount = function () {
            unregisterEvents(_this.registeredEvents);
            if (_this.state.streetViewPanorama) {
                _this.state.streetViewPanorama.setVisible(false);
            }
        };
        _this.render = function () { return null; };
        _this.getLinks = function () { return _this.state.streetViewPanorama.getLinks(); };
        _this.getLocation = function () { return _this.state.streetViewPanorama.getLocation(); };
        _this.getMotionTracking = function () { return _this.state.streetViewPanorama.getMotionTracking(); };
        _this.getPano = function () { return _this.state.streetViewPanorama.getPano(); };
        _this.getPhotographerPov = function () { return _this.state.streetViewPanorama.getPhotographerPov(); };
        _this.getPosition = function () { return _this.state.streetViewPanorama.getPosition(); };
        _this.getPov = function () { return _this.state.streetViewPanorama.getPov(); };
        _this.getStatus = function () { return _this.state.streetViewPanorama.getStatus(); };
        _this.getVisible = function () { return _this.state.streetViewPanorama.getVisible(); };
        _this.getZoom = function () { return _this.state.streetViewPanorama.getZoom(); };
        return _this;
    }
    StreetViewPanorama.contextType = MapContext;
    return StreetViewPanorama;
}(PureComponent));
export { StreetViewPanorama };
export default StreetViewPanorama;
//# sourceMappingURL=StreetViewPanorama.js.map