/// <reference types="googlemaps" />
import { PureComponent } from 'react';
interface StreetViewPanoramaState {
    streetViewPanorama?: google.maps.StreetViewPanorama;
}
interface StreetViewPanoramaProps {
    containerElement: Element;
    options?: google.maps.StreetViewPanoramaOptions;
    onCloseclick?: (event: google.maps.event) => void;
    onPanoChanged?: () => void;
    onPositionChanged?: () => void;
    onPovChanged?: () => void;
    onResize?: () => void;
    onStatusChanged?: () => void;
    onVisibleChanged?: () => void;
    onZoomChange?: () => void;
}
export declare class StreetViewPanorama extends PureComponent<StreetViewPanoramaProps, StreetViewPanoramaState> {
    static contextType: import("react").Context<google.maps.Map>;
    registeredEvents: google.maps.MapsEventListener[];
    state: StreetViewPanoramaState;
    componentDidMount: () => void;
    componentDidUpdate: (prevProps: any) => void;
    componentWillUnmount: () => void;
    render: () => any;
    getLinks: () => google.maps.StreetViewLink[];
    getLocation: () => google.maps.StreetViewLocation;
    getMotionTracking: () => boolean;
    getPano: () => string;
    getPhotographerPov: () => google.maps.StreetViewPov;
    getPosition: () => google.maps.LatLng;
    getPov: () => google.maps.StreetViewPov;
    getStatus: () => google.maps.StreetViewStatus;
    getVisible: () => boolean;
    getZoom: () => number;
}
export default StreetViewPanorama;
