/// <reference types="googlemaps" />
import { PureComponent } from 'react';
interface PolylineState {
    polyline?: google.maps.Polyline;
}
interface PolylineProps {
    options: google.maps.PolylineOptions;
    draggable: boolean;
    editable: boolean;
    visible: boolean;
    path: google.maps.MVCArray<google.maps.LatLng> | google.maps.LatLng[] | google.maps.LatLngLiteral[];
    onDblClick: (e: MouseEvent) => void;
    onDragEnd: (e: MouseEvent) => void;
    onDragStart: (e: MouseEvent) => void;
    onMouseDown: (e: MouseEvent) => void;
    onMouseMove: (e: MouseEvent) => void;
    onMouseOut: (e: MouseEvent) => void;
    onMouseOver: (e: MouseEvent) => void;
    onMouseUp: (e: MouseEvent) => void;
    onRightClick: (e: MouseEvent) => void;
    onClick: (e: MouseEvent) => void;
    onDrag: (e: MouseEvent) => void;
}
export declare class Polyline extends PureComponent<PolylineProps, PolylineState> {
    static contextType: import("react").Context<google.maps.Map>;
    registeredEvents: google.maps.MapsEventListener[];
    state: PolylineState;
    componentDidMount: () => void;
    componentDidUpdate: (prevProps: PolylineProps) => void;
    componentWillUnmount: () => void;
    render: () => any;
    getDraggable: () => boolean;
    getEditable: () => boolean;
    getPath: () => google.maps.MVCArray<google.maps.LatLng>;
    getVisible: () => boolean;
    getMap: () => google.maps.Map;
}
export default Polyline;
