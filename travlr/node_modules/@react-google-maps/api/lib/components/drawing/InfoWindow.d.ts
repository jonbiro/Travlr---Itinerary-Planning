/// <reference types="googlemaps" />
import { PureComponent } from 'react';
import { LatLng } from '../../types';
interface InfoWindowState {
    infoWindow?: google.maps.InfoWindow;
}
interface InfoWindowProps {
    anchor?: google.maps.MVCObject;
    options?: google.maps.InfoWindowOptions;
    position: LatLng;
    zIndex?: number;
    onCloseClick?: () => void;
    onDomReady?: () => void;
    onContentChanged?: () => void;
    onPositionChanged?: () => void;
    onZindexChanged?: () => void;
}
export declare class InfoWindow extends PureComponent<InfoWindowProps, InfoWindowState> {
    static contextType: import("react").Context<google.maps.Map>;
    registeredEvents: google.maps.MapsEventListener[];
    containerElement: HTMLElement;
    state: InfoWindowState;
    componentDidMount: () => void;
    componentDidUpdate(prevProps: InfoWindowProps): void;
    componentWillUnmount: () => void;
    render: () => import("react").ReactPortal;
    open: (infoWindow: google.maps.InfoWindow, anchor: google.maps.MVCObject) => void;
    getContent: () => string | Element;
    getPosition: () => google.maps.LatLng;
    getZIndex: () => number;
}
export default InfoWindow;
