/// <reference types="googlemaps" />
import { PureComponent } from 'react';
import { LatLng } from '../../types';
interface CircleState {
    circle?: google.maps.Circle;
}
interface CircleProps {
    options: google.maps.CircleOptions;
    center: LatLng;
    radius: number;
    draggable: boolean;
    editable: boolean;
    visible: boolean;
    onDblClick: (e: MouseEvent) => void;
    onDragEnd: (e: MouseEvent) => void;
    onDragStart: (e: MouseEvent) => void;
    onMouseDown: (e: MouseEvent) => void;
    onMouseMove: (e: MouseEvent) => void;
    onMouseOut: (e: MouseEvent) => void;
    onMouseOver: (e: MouseEvent) => void;
    onMouseUp: (e: MouseEvent) => void;
    onRightClick: (e: MouseEvent) => void;
    onCenterChanged: () => void;
    onClick: (e: MouseEvent) => void;
    onDrag: (e: MouseEvent) => void;
    onRadiusChanged: () => void;
}
export declare class Circle extends PureComponent<CircleProps, CircleState> {
    static contextType: import("react").Context<google.maps.Map>;
    registeredEvents: google.maps.MapsEventListener[];
    state: CircleState;
    componentDidMount: () => void;
    componentDidUpdate: (prevProps: CircleProps) => void;
    componentWillUnmount: () => void;
    render: () => any;
    getBounds: () => google.maps.LatLngBounds;
    getCenter: () => google.maps.LatLng;
    getDraggable: () => boolean;
    getEditable: () => boolean;
    getMap: () => google.maps.Map;
    getRadius: () => number;
    getVisible: () => boolean;
}
export default Circle;
