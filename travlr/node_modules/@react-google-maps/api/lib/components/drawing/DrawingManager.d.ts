/// <reference types="googlemaps" />
import { PureComponent } from 'react';
interface DrawingManagerState {
    drawingManager?: google.maps.drawing.DrawingManager;
}
interface DrawingManagerProps {
    options?: google.maps.drawing.DrawingManagerOptions;
    drawingMode?: google.maps.drawing.OverlayType | null;
    onCircleComplete?: (circle: google.maps.Circle) => void;
    onMarkerComplete?: (marker: google.maps.Marker) => void;
    onOverlayComplete?: (e: google.maps.drawing.OverlayCompleteEvent) => void;
    onPolygonComplete?: (polygon: google.maps.Polygon) => void;
    onPolylineComplete?: (polyline: google.maps.Polyline) => void;
    onRectangleComplete?: (rectangle: google.maps.Rectangle) => void;
}
export declare class DrawingManager extends PureComponent<DrawingManagerProps, DrawingManagerState> {
    static contextType: import("react").Context<google.maps.Map>;
    registeredEvents: google.maps.MapsEventListener[];
    state: DrawingManagerState;
    constructor(props: DrawingManagerProps);
    componentDidMount: () => void;
    componentDidUpdate: (prevProps: DrawingManagerProps) => void;
    componentWillUnmount: () => void;
    render: () => any;
    getDrawingMode: () => google.maps.drawing.OverlayType;
    getMap: () => google.maps.Map;
}
export default DrawingManager;
