/// <reference types="googlemaps" />
import { PureComponent } from 'react';
interface OverlayViewState {
    overlayView?: google.maps.OverlayView;
}
interface OverlayViewProps {
    mapPaneName: string;
    getPixelPositionOffset?: (offsetWidth: number, offsetHeight: number) => {
        x: number;
        y: number;
    };
    bounds?: google.maps.LatLngBounds;
    position?: google.maps.LatLng;
}
export declare class OverlayView extends PureComponent<OverlayViewProps, OverlayViewState> {
    static FLOAT_PANE: string;
    static MAP_PANE: string;
    static MARKER_LAYER: string;
    static OVERLAY_LAYER: string;
    static OVERLAY_MOUSE_TARGET: string;
    static contextType: import("react").Context<google.maps.Map>;
    registeredEvents: google.maps.MapsEventListener[];
    state: OverlayViewState;
    containerElement: HTMLElement;
    componentDidMount: () => void;
    componentDidUpdate: (prevProps: OverlayViewProps) => void;
    componentWillUnmount: () => void;
    render: () => import("react").ReactPortal;
    preventMapHitsAndGesturesFrom: (element: HTMLElement) => any;
    preventMapHitsFrom: (element: HTMLElement) => any;
    draw: () => void;
    getMap: () => google.maps.Map | google.maps.StreetViewPanorama;
    getPanes: () => google.maps.MapPanes;
    getProjection: () => google.maps.MapCanvasProjection;
    onAdd: () => void;
    onPositionElement: () => void;
    onRemove: () => void;
}
export default OverlayView;
