/// <reference types="googlemaps" />
import * as React from 'react';
import { Context, PureComponent, RefObject } from 'react';
import { Bounds } from '../../types';
interface StandaloneSearchBoxState {
    searchBox?: google.maps.places.SearchBox;
}
interface StandaloneSearchBoxProps {
    bounds?: Bounds;
    options?: google.maps.places.SearchBoxOptions;
    onPlacesChanged?: () => void;
}
declare class StandaloneSearchBox extends PureComponent<StandaloneSearchBoxProps, StandaloneSearchBoxState> {
    static contextType: React.Context<google.maps.Map>;
    registeredEvents: google.maps.MapsEventListener[];
    containerElement: RefObject<HTMLDivElement>;
    state: StandaloneSearchBoxState;
    constructor(props: StandaloneSearchBoxProps, context: Context<google.maps.Map>);
    componentDidMount: () => void;
    componentDidUpdate: (prevProps: StandaloneSearchBoxProps) => void;
    componentWillUnmount: () => void;
    render: () => JSX.Element;
    getBounds: () => google.maps.LatLngBounds;
    getPlaces: () => google.maps.places.PlaceResult[];
}
export default StandaloneSearchBox;
