{"ast":null,"code":"import _classCallCheck from \"/Users/yoni/Development/travlrbackend2/travlr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yoni/Development/travlrbackend2/travlr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yoni/Development/travlrbackend2/travlr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yoni/Development/travlrbackend2/travlr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yoni/Development/travlrbackend2/travlr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yoni/Development/travlrbackend2/travlr/src/BestComponents/TripContainer.js\";\nimport React, { Component } from \"react\";\nimport Trip from \"./TripCard\"; // import Grid from \"antd/es/card/Grid\";\n// import {AxiosInstance as axios} from \"axios\";\n\nimport NewTripForm from \"./NewTripForm\";\nimport { Route, Switch, withRouter } from \"react-router-dom\"; // import TripCard from \"../components/TripCard\";\n\nimport Login from \"./Login\";\nimport TripCardMainCityContainer from \"./TripCardMainCityContainer\"; // import CityShow from \"./CityShow\";\n\nvar TripContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TripContainer, _Component);\n\n  function TripContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TripContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TripContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      destination: \"\",\n      trips: []\n    };\n\n    _this.fetchTrips = function () {\n      return fetch(\"/api/v1/trips\", {\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem(\"accessToken\"))\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (trips) {\n        var results = trips.data; // console.log(results);\n\n        _this.setState({\n          trips: results\n        });\n      });\n    };\n\n    _this.createTrip = function () {\n      var data = {\n        destination: _this.state.destination\n      };\n      fetch(\"http://localhost:3005/api/v1/trips\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.getItem(\"accessToken\"))\n        },\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (trips) {\n        _this.fetchTrips();\n\n        _this.setState({\n          destination: \"\"\n        });\n      });\n    };\n\n    _this.changeHandler = function (e) {\n      // console.log(e.target.value);\n      _this.setState({\n        destination: e.target.value\n      });\n    };\n\n    _this.onSelect = function (trip) {\n      // console.log(\"setnewtrip\", trip);\n      localStorage.setItem(\"destination\", trip.id);\n    };\n\n    _this.deleteHandler = function (trip) {\n      fetch(\"http://localhost:3005/api/v1/trips/\".concat(trip.id), {\n        method: \"delete\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.getItem(\"accessToken\"))\n        }\n      }).then(_this.fetchTrips);\n    };\n\n    _this.showTrips = function () {\n      // let showEvent= this.state.trips.map(atrip => {\n      //   return <Trip key={atrip.id} trip={atrip} onSelect={this.onSelect} deleteHandler={this.deleteHandler}/>;\n      // });\n      // return showEvent\n      return _this.state.trips.map(function (aTrip) {\n        return React.createElement(Trip, {\n          key: aTrip.id,\n          trip: aTrip,\n          onSelect: _this.onSelect,\n          deleteHandler: _this.deleteHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.checkAuthTripCard = function (routerProps) {\n      var paramId = routerProps.match.params.id;\n\n      var trip = _this.state.trips.find(function (tripObj) {\n        return tripObj.id === parseInt(paramId);\n      }); // console.log(\"this \" + trip.id);\n\n\n      if (localStorage.getItem(\"accessToken\")) {\n        return React.createElement(TripCardMainCityContainer, {\n          trip: trip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Login, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TripContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchTrips();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/trips/:id\",\n        render: function render(routerProps) {\n          return React.createElement(React.Fragment, null, _this2.state.trips.length > 0 ? _this2.checkAuthTripCard(routerProps) : \"Loading\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        render: function render() {\n          return React.createElement(React.Fragment, null, React.createElement(NewTripForm, {\n            changeHandler: _this2.changeHandler,\n            destination: _this2.state.destination,\n            createTrip: _this2.createTrip,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"ui centered cards\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, _this2.showTrips()));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TripContainer;\n}(Component);\n\nexport default withRouter(TripContainer);","map":{"version":3,"sources":["/Users/yoni/Development/travlrbackend2/travlr/src/BestComponents/TripContainer.js"],"names":["React","Component","Trip","NewTripForm","Route","Switch","withRouter","Login","TripCardMainCityContainer","TripContainer","state","destination","trips","fetchTrips","fetch","headers","Authorization","localStorage","getItem","then","res","json","results","data","setState","createTrip","method","body","JSON","stringify","changeHandler","e","target","value","onSelect","trip","setItem","id","deleteHandler","showTrips","map","aTrip","checkAuthTripCard","routerProps","paramId","match","params","find","tripObj","parseInt","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Trip from \"./TripCard\";\n// import Grid from \"antd/es/card/Grid\";\n// import {AxiosInstance as axios} from \"axios\";\nimport NewTripForm from \"./NewTripForm\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\n// import TripCard from \"../components/TripCard\";\nimport Login from \"./Login\";\nimport TripCardMainCityContainer from \"./TripCardMainCityContainer\";\n// import CityShow from \"./CityShow\";\n\nclass TripContainer extends Component {\n  state = {\n    destination: \"\",\n    trips: []\n  };\n\n  componentDidMount() {\n    this.fetchTrips();\n  }\n\n  fetchTrips = () => {\n    return fetch(\"/api/v1/trips\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    })\n      .then(res => res.json())\n      .then(trips => {\n        let results = trips.data;\n        // console.log(results);\n        this.setState({\n          trips: results\n        });\n      });\n  };\n\n  createTrip = () => {\n    let data = {\n      destination: this.state.destination\n    };\n    fetch(\"http://localhost:3005/api/v1/trips\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(trips => {\n        this.fetchTrips();\n        this.setState({\n          destination: \"\"\n        });\n      });\n  };\n\n  changeHandler = e => {\n    // console.log(e.target.value);\n    this.setState({\n      destination: e.target.value\n    });\n  };\n\n  onSelect = trip => {\n    // console.log(\"setnewtrip\", trip);\n    localStorage.setItem(\"destination\", trip.id);\n  };\n\n  deleteHandler = trip => {\n    fetch(`http://localhost:3005/api/v1/trips/${trip.id}`, {\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    }).then(this.fetchTrips);\n  };\n\n  showTrips = () => {\n    // let showEvent= this.state.trips.map(atrip => {\n    //   return <Trip key={atrip.id} trip={atrip} onSelect={this.onSelect} deleteHandler={this.deleteHandler}/>;\n    // });\n    // return showEvent\n    return this.state.trips.map(aTrip => {\n      return (\n        <Trip\n          key={aTrip.id}\n          trip={aTrip}\n          onSelect={this.onSelect}\n          deleteHandler={this.deleteHandler}\n        />\n      );\n    });\n  };\n\n  checkAuthTripCard = routerProps => {\n    let paramId = routerProps.match.params.id;\n    let trip = this.state.trips.find(\n      tripObj => tripObj.id === parseInt(paramId)\n    );\n    // console.log(\"this \" + trip.id);\n\n    if (localStorage.getItem(\"accessToken\")) {\n      return <TripCardMainCityContainer trip={trip} />;\n    } else {\n      return <Login />;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route\n            path={\"/trips/:id\"}\n            render={routerProps => (\n              <>\n                {this.state.trips.length > 0\n                  ? this.checkAuthTripCard(routerProps)\n                  : \"Loading\"}\n              </>\n            )}\n          />\n          {/*<Route*/}\n\t          {/*path={\"/cities/:id\"}*/}\n\t          {/*component={CityShow}*/}\n          {/*/>*/}\n          <Route\n            path={\"/\"}\n            render={() => {\n              return (\n                <>\n                  <NewTripForm\n                    changeHandler={this.changeHandler}\n                    destination={this.state.destination}\n                    createTrip={this.createTrip}\n                  />\n\n                  <div className='ui centered cards' >{this.showTrips()}</div>\n                </>\n              );\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(TripContainer);\n"]},"metadata":{},"sourceType":"module"}